#*****************************************************************************************
# Vivado (TM) v2022.2 (64-bit)
#
# cnmr_hw_ez7.tcl: Tcl script for re-creating project 'cnmr_hw_ez7'
#
# Generated by Vivado on Fri Jan 31 16:03:25 EST 2025
# IP Build 3669848 on Fri Oct 14 08:30:02 MDT 2022
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (cnmr_hw_ez7.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    "/home/david/Documents/c-nmr/cnmr_hw_ez7/hdl/port_slicer.v"
#    "/home/david/Documents/c-nmr/cnmr_hw_ez7/hdl/axis_ram_writer.v"
#    "/home/david/Documents/c-nmr/cnmr_hw_ez7/hdl/dna_reader.v"
#    "/home/david/Documents/c-nmr/cnmr_hw_ez7/hdl/axi_cfg_register.v"
#    "/home/david/Documents/c-nmr/cnmr_hw_ez7/hdl/axi_sts_register.v"
#    "/home/david/Documents/c-nmr/cnmr_hw_ez7/hdl/channel_config.v"
#    "/home/david/Documents/c-nmr/cnmr_hw_ez7/hdl/cpmg.v"
#    "/home/david/Documents/c-nmr/cnmr_hw_ez7/hdl/sync_delay.v"
#    "/home/david/Documents/c-nmr/cnmr_hw_ez7/hdl/axis_constant.v"
#    "/home/david/Documents/c-nmr/cnmr_hw_ez7/hdl/NOT_gate_level.v"
#    "/home/david/Documents/c-nmr/cnmr_hw_ez7/hdl/phase_sync.v"
#    "/home/david/Documents/c-nmr/cnmr_hw_ez7/hdl/value_latch.v"
#    "/home/david/Documents/c-nmr/cnmr_hw_ez7/constr/constr_1.xdc"
#
# 3. The following remote source files that were added to the original project:-
#
#    <none>
#
#*****************************************************************************************

# Check file required for this script exists
proc checkRequiredFiles { origin_dir} {
  set status true
  set files [list \
 "[file normalize "$origin_dir/hdl/port_slicer.v"]"\
 "[file normalize "$origin_dir/hdl/axis_ram_writer.v"]"\
 "[file normalize "$origin_dir/hdl/dna_reader.v"]"\
 "[file normalize "$origin_dir/hdl/axi_cfg_register.v"]"\
 "[file normalize "$origin_dir/hdl/axi_sts_register.v"]"\
 "[file normalize "$origin_dir/hdl/channel_config.v"]"\
 "[file normalize "$origin_dir/hdl/cpmg.v"]"\
 "[file normalize "$origin_dir/hdl/sync_delay.v"]"\
 "[file normalize "$origin_dir/hdl/axis_constant.v"]"\
 "[file normalize "$origin_dir/hdl/NOT_gate_level.v"]"\
 "[file normalize "$origin_dir/hdl/phase_sync.v"]"\
 "[file normalize "$origin_dir/hdl/value_latch.v"]"\
 "[file normalize "$origin_dir/constr/constr_1.xdc"]"\
  ]
  foreach ifile $files {
    if { ![file isfile $ifile] } {
      puts " Could not find local file $ifile "
      set status false
    }
  }

  set paths [list \
 "[file normalize "$origin_dir/vivado-library"]"]"\
  ]
  foreach ipath $paths {
    if { ![file isdirectory $ipath] } {
      puts " Could not access $ipath "
      set status false
    }
  }

  return $status
}
# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "cnmr_hw_ez7"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "cnmr_hw_ez7.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/../"]"

# Check for paths and files needed for project creation
set validate_required 0
if { $validate_required } {
  if { [checkRequiredFiles $origin_dir] } {
    puts "Tcl file $script_file is valid. All files required for project creation is accesable. "
  } else {
    puts "Tcl file $script_file is not valid. Not all files required for project creation is accesable. "
    return
  }
}

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xc7z020clg484-1

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
set_property -name "board_part_repo_paths" -value "[file normalize "$origin_dir/../../../../.Xilinx/Vivado/2022.2/xhub/board_store/xilinx_board_store"] [file normalize "$origin_dir/../../../RedPitaya-FPGA-master/brd/redpitaya/1.1"]" -objects $obj
set_property -name "board_part" -value "digilentinc.com:eclypse-z7:part0:1.1" -objects $obj
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "enable_resource_estimation" -value "0" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "platform.board_id" -value "eclypse-z7" -objects $obj
set_property -name "revised_directory_structure" -value "1" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "sim_compile_state" -value "1" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC XPM_FIFO XPM_MEMORY" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set IP repository paths
set obj [get_filesets sources_1]
if { $obj != {} } {
   set_property "ip_repo_paths" "[file normalize "$origin_dir/../vivado-library"]" $obj

   # Rebuild user ip_repo's index before adding any source files
   update_ip_catalog -rebuild
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/hdl/port_slicer.v" ]\
 [file normalize "${origin_dir}/hdl/axis_ram_writer.v" ]\
 [file normalize "${origin_dir}/hdl/dna_reader.v" ]\
 [file normalize "${origin_dir}/hdl/axi_cfg_register.v" ]\
 [file normalize "${origin_dir}/hdl/axi_sts_register.v" ]\
 [file normalize "${origin_dir}/hdl/channel_config.v" ]\
 [file normalize "${origin_dir}/hdl/cpmg.v" ]\
 [file normalize "${origin_dir}/hdl/sync_delay.v" ]\
 [file normalize "${origin_dir}/hdl/axis_constant.v" ]\
 [file normalize "${origin_dir}/hdl/NOT_gate_level.v" ]\
 [file normalize "${origin_dir}/hdl/phase_sync.v" ]\
 [file normalize "${origin_dir}/hdl/value_latch.v" ]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "top" -value "design_1_wrapper" -objects $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/constr/constr_1.xdc"]"
set file_imported [import_files -fileset constrs_1 [list $file]]
set file "constr/constr_1.xdc"
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Empty (no sources present)

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "top" -value "design_1_wrapper" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Empty (no sources present)

# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]


# Adding sources referenced in BDs, if not already added
if { [get_files port_slicer.v] == "" } {
  import_files -quiet -fileset sources_1 /home/david/Documents/c-nmr/cnmr_hw_ez7/hdl/port_slicer.v
}
if { [get_files axis_ram_writer.v] == "" } {
  import_files -quiet -fileset sources_1 /home/david/Documents/c-nmr/cnmr_hw_ez7/hdl/axis_ram_writer.v
}
if { [get_files port_slicer.v] == "" } {
  import_files -quiet -fileset sources_1 /home/david/Documents/c-nmr/cnmr_hw_ez7/hdl/port_slicer.v
}
if { [get_files dna_reader.v] == "" } {
  import_files -quiet -fileset sources_1 /home/david/Documents/c-nmr/cnmr_hw_ez7/hdl/dna_reader.v
}
if { [get_files axi_cfg_register.v] == "" } {
  import_files -quiet -fileset sources_1 /home/david/Documents/c-nmr/cnmr_hw_ez7/hdl/axi_cfg_register.v
}
if { [get_files axi_sts_register.v] == "" } {
  import_files -quiet -fileset sources_1 /home/david/Documents/c-nmr/cnmr_hw_ez7/hdl/axi_sts_register.v
}
if { [get_files channel_config.v] == "" } {
  import_files -quiet -fileset sources_1 /home/david/Documents/c-nmr/cnmr_hw_ez7/hdl/channel_config.v
}
if { [get_files cpmg.v] == "" } {
  import_files -quiet -fileset sources_1 /home/david/Documents/c-nmr/cnmr_hw_ez7/hdl/cpmg.v
}
if { [get_files port_slicer.v] == "" } {
  import_files -quiet -fileset sources_1 /home/david/Documents/c-nmr/cnmr_hw_ez7/hdl/port_slicer.v
}
if { [get_files port_slicer.v] == "" } {
  import_files -quiet -fileset sources_1 /home/david/Documents/c-nmr/cnmr_hw_ez7/hdl/port_slicer.v
}
if { [get_files sync_delay.v] == "" } {
  import_files -quiet -fileset sources_1 /home/david/Documents/c-nmr/cnmr_hw_ez7/hdl/sync_delay.v
}
if { [get_files port_slicer.v] == "" } {
  import_files -quiet -fileset sources_1 /home/david/Documents/c-nmr/cnmr_hw_ez7/hdl/port_slicer.v
}
if { [get_files port_slicer.v] == "" } {
  import_files -quiet -fileset sources_1 /home/david/Documents/c-nmr/cnmr_hw_ez7/hdl/port_slicer.v
}
if { [get_files axis_constant.v] == "" } {
  import_files -quiet -fileset sources_1 /home/david/Documents/c-nmr/cnmr_hw_ez7/hdl/axis_constant.v
}
if { [get_files port_slicer.v] == "" } {
  import_files -quiet -fileset sources_1 /home/david/Documents/c-nmr/cnmr_hw_ez7/hdl/port_slicer.v
}


# Proc to create BD design_1
proc cr_bd_design_1 { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# module references:
# axi_cfg_register, axi_sts_register, axis_constant, axis_ram_writer, channel_config, cpmg, dna_reader, port_slicer, port_slicer, port_slicer, port_slicer, port_slicer, port_slicer, port_slicer, sync_delay



  # CHANGE DESIGN NAME HERE
  set design_name design_1

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  digilent.com:user:ZmodAWGController:1.1\
  digilent.com:user:ZmodScopeController:1.2\
  xilinx.com:ip:axis_dwidth_converter:1.1\
  xilinx.com:ip:axis_subset_converter:1.1\
  xilinx.com:ip:cic_compiler:4.0\
  xilinx.com:ip:clk_wiz:6.0\
  xilinx.com:ip:dds_compiler:6.0\
  xilinx.com:ip:fir_compiler:7.2\
  xilinx.com:ip:proc_sys_reset:5.0\
  xilinx.com:ip:processing_system7:5.5\
  xilinx.com:ip:xlconcat:2.1\
  xilinx.com:ip:xlconstant:1.1\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  ##################################################################
  # CHECK Modules
  ##################################################################
  set bCheckModules 1
  if { $bCheckModules == 1 } {
     set list_check_mods "\ 
  axi_cfg_register\
  axi_sts_register\
  axis_constant\
  axis_ram_writer\
  channel_config\
  cpmg\
  dna_reader\
  port_slicer\
  port_slicer\
  port_slicer\
  port_slicer\
  port_slicer\
  port_slicer\
  port_slicer\
  sync_delay\
  "

   set list_mods_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2020 -severity "INFO" "Checking if the following modules exist in the project's sources: $list_check_mods ."

   foreach mod_vlnv $list_check_mods {
      if { [can_resolve_reference $mod_vlnv] == 0 } {
         lappend list_mods_missing $mod_vlnv
      }
   }

   if { $list_mods_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2021 -severity "ERROR" "The following module(s) are not found in the project: $list_mods_missing" }
      common::send_gid_msg -ssname BD::TCL -id 2022 -severity "INFO" "Please add source files for the missing module(s) above."
      set bCheckIPsPassed 0
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set DDR_0 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:ddrx_rtl:1.0 DDR_0 ]

  set FIXED_IO_0 [ create_bd_intf_port -mode Master -vlnv xilinx.com:display_processing_system7:fixedio_rtl:1.0 FIXED_IO_0 ]


  # Create ports
  set ZmodAdcClkIn_n_0 [ create_bd_port -dir O ZmodAdcClkIn_n_0 ]
  set ZmodAdcClkIn_p_0 [ create_bd_port -dir O ZmodAdcClkIn_p_0 ]
  set ZmodDAC_ClkIO_0 [ create_bd_port -dir O -type clk ZmodDAC_ClkIO_0 ]
  set ZmodDAC_ClkIn_0 [ create_bd_port -dir O -type clk ZmodDAC_ClkIn_0 ]
  set ZmodDcoClk_0 [ create_bd_port -dir I -type clk ZmodDcoClk_0 ]
  set clk_in1_0 [ create_bd_port -dir I -type clk -freq_hz 125000000 clk_in1_0 ]
  set dZmodADC_Data_0 [ create_bd_port -dir I -from 13 -to 0 dZmodADC_Data_0 ]
  set dZmodDAC_Data_0 [ create_bd_port -dir O -from 13 -to 0 dZmodDAC_Data_0 ]
  set iZmodSync_0 [ create_bd_port -dir O iZmodSync_0 ]
  set sZmodADC_CS_0 [ create_bd_port -dir O sZmodADC_CS_0 ]
  set sZmodADC_SDIO_0 [ create_bd_port -dir IO sZmodADC_SDIO_0 ]
  set sZmodADC_Sclk_0 [ create_bd_port -dir O sZmodADC_Sclk_0 ]
  set sZmodCh1CouplingH_0 [ create_bd_port -dir O sZmodCh1CouplingH_0 ]
  set sZmodCh1CouplingL_0 [ create_bd_port -dir O sZmodCh1CouplingL_0 ]
  set sZmodCh1GainH_0 [ create_bd_port -dir O sZmodCh1GainH_0 ]
  set sZmodCh1GainL_0 [ create_bd_port -dir O sZmodCh1GainL_0 ]
  set sZmodCh2CouplingH_0 [ create_bd_port -dir O sZmodCh2CouplingH_0 ]
  set sZmodCh2CouplingL_0 [ create_bd_port -dir O sZmodCh2CouplingL_0 ]
  set sZmodCh2GainH_0 [ create_bd_port -dir O sZmodCh2GainH_0 ]
  set sZmodCh2GainL_0 [ create_bd_port -dir O sZmodCh2GainL_0 ]
  set sZmodDAC_CS_0 [ create_bd_port -dir O sZmodDAC_CS_0 ]
  set sZmodDAC_EnOut_0 [ create_bd_port -dir O sZmodDAC_EnOut_0 ]
  set sZmodDAC_Reset_0 [ create_bd_port -dir O -type rst sZmodDAC_Reset_0 ]
  set sZmodDAC_SCLK_0 [ create_bd_port -dir O sZmodDAC_SCLK_0 ]
  set sZmodDAC_SDIO_0 [ create_bd_port -dir IO sZmodDAC_SDIO_0 ]
  set sZmodDAC_SetFS1_0 [ create_bd_port -dir O sZmodDAC_SetFS1_0 ]
  set sZmodDAC_SetFS2_0 [ create_bd_port -dir O sZmodDAC_SetFS2_0 ]
  set sZmodRelayComH_0 [ create_bd_port -dir O sZmodRelayComH_0 ]
  set sZmodRelayComL_0 [ create_bd_port -dir O sZmodRelayComL_0 ]

  # Create instance: ZmodAWGController_0, and set properties
  set ZmodAWGController_0 [ create_bd_cell -type ip -vlnv digilent.com:user:ZmodAWGController:1.1 ZmodAWGController_0 ]
  set_property -dict [list \
    CONFIG.kCh1ScaleStatic {"1"} \
    CONFIG.kCh2ScaleStatic {"1"} \
  ] $ZmodAWGController_0


  # Create instance: ZmodScopeController_0, and set properties
  set ZmodScopeController_0 [ create_bd_cell -type ip -vlnv digilent.com:user:ZmodScopeController:1.2 ZmodScopeController_0 ]
  set_property -dict [list \
    CONFIG.kCh1GainStatic {"1"} \
    CONFIG.kCh2GainStatic {"1"} \
    CONFIG.kExtCalibEn {false} \
    CONFIG.kExtRelayConfigEn {false} \
  ] $ZmodScopeController_0


  # Create instance: axi_cfg_register_0, and set properties
  set block_name axi_cfg_register
  set block_cell_name axi_cfg_register_0
  if { [catch {set axi_cfg_register_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axi_cfg_register_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [list \
    CONFIG.AXI_ADDR_WIDTH {32} \
    CONFIG.CFG_DATA_WIDTH {256} \
  ] $axi_cfg_register_0


  # Create instance: axi_interconnect_0, and set properties
  set axi_interconnect_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect_0 ]

  # Create instance: axi_sts_register_0, and set properties
  set block_name axi_sts_register
  set block_cell_name axi_sts_register_0
  if { [catch {set axi_sts_register_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axi_sts_register_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [list \
    CONFIG.AXI_ADDR_WIDTH {32} \
    CONFIG.STS_DATA_WIDTH {128} \
  ] $axi_sts_register_0


  # Create instance: axis_constant_0, and set properties
  set block_name axis_constant
  set block_cell_name axis_constant_0
  if { [catch {set axis_constant_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_constant_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_0 ]
  set_property -dict [list \
    CONFIG.M_TDATA_NUM_BYTES {8} \
    CONFIG.S_TDATA_NUM_BYTES {2} \
  ] $axis_dwidth_converter_0


  # Create instance: axis_ram_writer_0, and set properties
  set block_name axis_ram_writer
  set block_cell_name axis_ram_writer_0
  if { [catch {set axis_ram_writer_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $axis_ram_writer_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property CONFIG.ADDR_WIDTH {16} $axis_ram_writer_0


  # Create instance: axis_subset_converter_0, and set properties
  set axis_subset_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_subset_converter:1.1 axis_subset_converter_0 ]
  set_property -dict [list \
    CONFIG.M_TDATA_NUM_BYTES {2} \
    CONFIG.S_TDATA_NUM_BYTES {4} \
  ] $axis_subset_converter_0


  # Create instance: channel_config_0, and set properties
  set block_name channel_config
  set block_cell_name channel_config_0
  if { [catch {set channel_config_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $channel_config_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: cic_compiler_0, and set properties
  set cic_compiler_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:cic_compiler:4.0 cic_compiler_0 ]
  set_property -dict [list \
    CONFIG.Clock_Frequency {100} \
    CONFIG.Filter_Type {Decimation} \
    CONFIG.Fixed_Or_Initial_Rate {10} \
    CONFIG.HAS_ARESETN {true} \
    CONFIG.Input_Data_Width {16} \
    CONFIG.Input_Sample_Frequency {100} \
    CONFIG.Maximum_Rate {10} \
    CONFIG.Minimum_Rate {10} \
    CONFIG.Number_Of_Stages {4} \
    CONFIG.Output_Data_Width {30} \
    CONFIG.SamplePeriod {1} \
  ] $cic_compiler_0


  # Create instance: clk_wiz_0, and set properties
  set clk_wiz_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:clk_wiz:6.0 clk_wiz_0 ]
  set_property -dict [list \
    CONFIG.CLKIN1_JITTER_PS {80.0} \
    CONFIG.CLKOUT1_JITTER {265.121} \
    CONFIG.CLKOUT1_PHASE_ERROR {265.359} \
    CONFIG.CLKOUT2_JITTER {265.121} \
    CONFIG.CLKOUT2_PHASE_ERROR {265.359} \
    CONFIG.CLKOUT2_REQUESTED_PHASE {90.000} \
    CONFIG.CLKOUT2_USED {true} \
    CONFIG.CLKOUT3_JITTER {208.542} \
    CONFIG.CLKOUT3_PHASE_ERROR {265.359} \
    CONFIG.CLKOUT3_REQUESTED_OUT_FREQ {400.000} \
    CONFIG.CLKOUT3_REQUESTED_PHASE {90.000} \
    CONFIG.CLKOUT3_USED {true} \
    CONFIG.MMCM_CLKFBOUT_MULT_F {32.000} \
    CONFIG.MMCM_CLKIN1_PERIOD {8.000} \
    CONFIG.MMCM_CLKOUT0_DIVIDE_F {8.000} \
    CONFIG.MMCM_CLKOUT1_DIVIDE {8} \
    CONFIG.MMCM_CLKOUT1_PHASE {90.000} \
    CONFIG.MMCM_CLKOUT2_DIVIDE {2} \
    CONFIG.MMCM_CLKOUT2_PHASE {90.000} \
    CONFIG.MMCM_DIVCLK_DIVIDE {5} \
    CONFIG.NUM_OUT_CLKS {3} \
    CONFIG.PRIM_IN_FREQ {125.000} \
    CONFIG.USE_RESET {false} \
  ] $clk_wiz_0


  # Create instance: cpmg_0, and set properties
  set block_name cpmg
  set block_cell_name cpmg_0
  if { [catch {set cpmg_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cpmg_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: dds_compiler_0, and set properties
  set dds_compiler_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:dds_compiler:6.0 dds_compiler_0 ]
  set_property -dict [list \
    CONFIG.DATA_Has_TLAST {Not_Required} \
    CONFIG.Has_ARESETn {true} \
    CONFIG.Latency {7} \
    CONFIG.Noise_Shaping {None} \
    CONFIG.Output_Frequency1 {0} \
    CONFIG.Output_Selection {Sine} \
    CONFIG.Output_Width {16} \
    CONFIG.PINC1 {0} \
    CONFIG.Parameter_Entry {Hardware_Parameters} \
    CONFIG.Phase_Increment {Streaming} \
    CONFIG.Phase_Width {32} \
    CONFIG.S_PHASE_Has_TUSER {Not_Required} \
  ] $dds_compiler_0


  # Create instance: dna_reader_0, and set properties
  set block_name dna_reader
  set block_cell_name dna_reader_0
  if { [catch {set dna_reader_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $dna_reader_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: fir_compiler_0, and set properties
  set fir_compiler_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fir_compiler:7.2 fir_compiler_0 ]
  set_property -dict [list \
    CONFIG.BestPrecision {true} \
    CONFIG.Clock_Frequency {100} \
    CONFIG.CoefficientVector {0.0014741954966090763, 0.0014911653845916045, 0.0015415339178727347, 0.0016251187401673615, 0.001741605649488668, 0.001890549804587908, 0.002071377451290726, 0.0022833881620101686,\
0.002525757579667078, 0.002797540655233539, 0.0030976753661425536, 0.003424986900885117, 0.0037781922932518725, 0.004155905487878263, 0.004556642817026605, 0.004978828866892743, 0.005420802710165686, 0.0058808244801017,\
0.006357082260006297, 0.006847699260753156, 0.007350741257814013, 0.007864224258232135, 0.008386122367048481, 0.008914375821887949, 0.009446899163736144, 0.009981589511387778, 0.010516334906628486, 0.011049022696923747,\
0.01157754792223358, 0.012099821672549802, 0.012613779382864173, 0.013117389032520606, 0.013608659216281297, 0.014085647054943959, 0.014546465913983337, 0.014989292899452182, 0.015412376101261826, 0.015814041554967004,\
0.016192699894299622, 0.016546852667927017, 0.016875098295247547, 0.01717613763747395, 0.017448779161787983, 0.017691943677971445, 0.017904668628622843, 0.018086111915848746, 0.01823555524916691, 0.018352407001267643,\
0.018436204560242482, 0.01848661616889746, 0.018503442243814255, 0.01848661616889746, 0.018436204560242482, 0.018352407001267643, 0.018235555249166906, 0.018086111915848743, 0.01790466862862284, 0.017691943677971445,\
0.017448779161787983, 0.01717613763747395, 0.016875098295247547, 0.016546852667927013, 0.01619269989429962, 0.015814041554967004, 0.015412376101261826, 0.014989292899452182, 0.014546465913983333, 0.014085647054943957,\
0.013608659216281292, 0.013117389032520603, 0.012613779382864171, 0.012099821672549799, 0.011577547922233578, 0.011049022696923736, 0.010516334906628481, 0.009981589511387777, 0.00944689916373614, 0.008914375821887949,\
0.008386122367048474, 0.007864224258232131, 0.007350741257814013, 0.006847699260753151, 0.006357082260006297, 0.005880824480101694, 0.005420802710165682, 0.004978828866892736, 0.0045566428170266, 0.004155905487878263,\
0.0037781922932518678, 0.003424986900885115, 0.0030976753661425497, 0.002797540655233536, 0.002525757579667078, 0.0022833881620101647, 0.0020713774512907237, 0.001890549804587907, 0.0017416056494886669,\
0.0016251187401673615, 0.0015415339178727334, 0.0014911653845916045, 0.0014741954966090763} \
    CONFIG.Coefficient_Fractional_Bits {21} \
    CONFIG.Coefficient_Sets {1} \
    CONFIG.Coefficient_Sign {Unsigned} \
    CONFIG.Coefficient_Structure {Inferred} \
    CONFIG.Coefficient_Width {16} \
    CONFIG.ColumnConfig {6} \
    CONFIG.Data_Width {30} \
    CONFIG.Decimation_Rate {10} \
    CONFIG.Filter_Architecture {Systolic_Multiply_Accumulate} \
    CONFIG.Filter_Type {Decimation} \
    CONFIG.Has_ARESETn {true} \
    CONFIG.Interpolation_Rate {1} \
    CONFIG.Number_Channels {1} \
    CONFIG.Output_Rounding_Mode {Convergent_Rounding_to_Even} \
    CONFIG.Output_Width {16} \
    CONFIG.Quantization {Quantize_Only} \
    CONFIG.RateSpecification {Frequency_Specification} \
    CONFIG.Sample_Frequency {100} \
    CONFIG.Zero_Pack_Factor {1} \
  ] $fir_compiler_0


  # Create instance: port_slicer_0, and set properties
  set block_name port_slicer
  set block_cell_name port_slicer_0
  if { [catch {set port_slicer_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $port_slicer_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [list \
    CONFIG.DIN_FROM {0} \
    CONFIG.DIN_WIDTH {256} \
  ] $port_slicer_0


  # Create instance: port_slicer_1, and set properties
  set block_name port_slicer
  set block_cell_name port_slicer_1
  if { [catch {set port_slicer_1 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $port_slicer_1 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [list \
    CONFIG.DIN_FROM {1} \
    CONFIG.DIN_TO {1} \
    CONFIG.DIN_WIDTH {256} \
  ] $port_slicer_1


  # Create instance: port_slicer_2, and set properties
  set block_name port_slicer
  set block_cell_name port_slicer_2
  if { [catch {set port_slicer_2 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $port_slicer_2 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [list \
    CONFIG.DIN_FROM {143} \
    CONFIG.DIN_TO {128} \
    CONFIG.DIN_WIDTH {256} \
  ] $port_slicer_2


  # Create instance: port_slicer_3, and set properties
  set block_name port_slicer
  set block_cell_name port_slicer_3
  if { [catch {set port_slicer_3 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $port_slicer_3 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [list \
    CONFIG.DIN_FROM {191} \
    CONFIG.DIN_TO {160} \
    CONFIG.DIN_WIDTH {256} \
  ] $port_slicer_3


  # Create instance: port_slicer_4, and set properties
  set block_name port_slicer
  set block_cell_name port_slicer_4
  if { [catch {set port_slicer_4 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $port_slicer_4 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [list \
    CONFIG.DIN_FROM {64} \
    CONFIG.DIN_TO {64} \
    CONFIG.DIN_WIDTH {256} \
  ] $port_slicer_4


  # Create instance: port_slicer_5, and set properties
  set block_name port_slicer
  set block_cell_name port_slicer_5
  if { [catch {set port_slicer_5 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $port_slicer_5 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [list \
    CONFIG.DIN_FROM {111} \
    CONFIG.DIN_TO {96} \
    CONFIG.DIN_WIDTH {256} \
  ] $port_slicer_5


  # Create instance: port_slicer_6, and set properties
  set block_name port_slicer
  set block_cell_name port_slicer_6
  if { [catch {set port_slicer_6 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $port_slicer_6 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [list \
    CONFIG.DIN_FROM {63} \
    CONFIG.DIN_TO {32} \
    CONFIG.DIN_WIDTH {256} \
  ] $port_slicer_6


  # Create instance: proc_sys_reset_0, and set properties
  set proc_sys_reset_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 proc_sys_reset_0 ]

  # Create instance: processing_system7_0, and set properties
  set processing_system7_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:processing_system7:5.5 processing_system7_0 ]
  set_property -dict [list \
    CONFIG.PCW_FPGA_FCLK0_ENABLE {1} \
    CONFIG.PCW_USE_S_AXI_HP0 {1} \
  ] $processing_system7_0


  # Create instance: sync_delay_0, and set properties
  set block_name sync_delay
  set block_cell_name sync_delay_0
  if { [catch {set sync_delay_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $sync_delay_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [list \
    CONFIG.IN0_WIDTH {32} \
    CONFIG.IN1_WIDTH {64} \
    CONFIG.IN2_WIDTH {32} \
    CONFIG.NUM_PORTS {3} \
  ] $xlconcat_0


  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]

  # Create instance: xlconstant_1, and set properties
  set xlconstant_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_1 ]
  set_property -dict [list \
    CONFIG.CONST_VAL {503316480} \
    CONFIG.CONST_WIDTH {32} \
  ] $xlconstant_1


  # Create instance: xlconstant_2, and set properties
  set xlconstant_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_2 ]

  # Create instance: xlconstant_3, and set properties
  set xlconstant_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_3 ]
  set_property CONFIG.CONST_VAL {0} $xlconstant_3


  # Create interface connections
  connect_bd_intf_net -intf_net S00_AXI_1 [get_bd_intf_pins axi_interconnect_0/S00_AXI] [get_bd_intf_pins processing_system7_0/M_AXI_GP0]
  connect_bd_intf_net -intf_net ZmodScopeController_0_DataStream [get_bd_intf_pins ZmodScopeController_0/DataStream] [get_bd_intf_pins axis_subset_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net axi_interconnect_0_M00_AXI [get_bd_intf_pins axi_interconnect_0/M00_AXI] [get_bd_intf_pins axi_sts_register_0/s_axi]
  connect_bd_intf_net -intf_net axi_interconnect_0_M01_AXI [get_bd_intf_pins axi_cfg_register_0/s_axi] [get_bd_intf_pins axi_interconnect_0/M01_AXI]
  connect_bd_intf_net -intf_net axis_constant_0_m_axis [get_bd_intf_pins axis_constant_0/m_axis] [get_bd_intf_pins dds_compiler_0/S_AXIS_PHASE]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS] [get_bd_intf_pins axis_ram_writer_0/s_axis]
  connect_bd_intf_net -intf_net axis_ram_writer_0_m_axi [get_bd_intf_pins axis_ram_writer_0/m_axi] [get_bd_intf_pins processing_system7_0/S_AXI_HP0]
  connect_bd_intf_net -intf_net axis_subset_converter_0_M_AXIS [get_bd_intf_pins axis_subset_converter_0/M_AXIS] [get_bd_intf_pins cic_compiler_0/S_AXIS_DATA]
  connect_bd_intf_net -intf_net cic_compiler_0_M_AXIS_DATA [get_bd_intf_pins cic_compiler_0/M_AXIS_DATA] [get_bd_intf_pins fir_compiler_0/S_AXIS_DATA]
  connect_bd_intf_net -intf_net fir_compiler_0_M_AXIS_DATA [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS] [get_bd_intf_pins fir_compiler_0/M_AXIS_DATA]
  connect_bd_intf_net -intf_net processing_system7_0_DDR [get_bd_intf_ports DDR_0] [get_bd_intf_pins processing_system7_0/DDR]
  connect_bd_intf_net -intf_net processing_system7_0_FIXED_IO [get_bd_intf_ports FIXED_IO_0] [get_bd_intf_pins processing_system7_0/FIXED_IO]

  # Create port connections
  connect_bd_net -net Net [get_bd_pins axi_cfg_register_0/cfg_data] [get_bd_pins port_slicer_0/din] [get_bd_pins port_slicer_1/din] [get_bd_pins port_slicer_2/din] [get_bd_pins port_slicer_3/din] [get_bd_pins port_slicer_4/din] [get_bd_pins port_slicer_5/din] [get_bd_pins port_slicer_6/din]
  connect_bd_net -net Net1 [get_bd_pins ZmodAWGController_0/aRst_n] [get_bd_pins ZmodAWGController_0/sDAC_EnIn] [get_bd_pins ZmodScopeController_0/aRst_n] [get_bd_pins ZmodScopeController_0/sEnableAcquisition] [get_bd_pins xlconcat_0/In0] [get_bd_pins xlconstant_2/dout]
  connect_bd_net -net Net2 [get_bd_ports sZmodADC_SDIO_0] [get_bd_pins ZmodScopeController_0/sZmodADC_SDIO]
  connect_bd_net -net Net3 [get_bd_ports sZmodDAC_SDIO_0] [get_bd_pins ZmodAWGController_0/sZmodDAC_SDIO]
  connect_bd_net -net Net4 [get_bd_pins cpmg_0/rst] [get_bd_pins dds_compiler_0/aresetn] [get_bd_pins port_slicer_4/dout] [get_bd_pins sync_delay_0/rst]
  connect_bd_net -net ZmodAWGController_0_ZmodDAC_ClkIO [get_bd_ports ZmodDAC_ClkIO_0] [get_bd_pins ZmodAWGController_0/ZmodDAC_ClkIO]
  connect_bd_net -net ZmodAWGController_0_ZmodDAC_ClkIn [get_bd_ports ZmodDAC_ClkIn_0] [get_bd_pins ZmodAWGController_0/ZmodDAC_ClkIn]
  connect_bd_net -net ZmodAWGController_0_dZmodDAC_Data [get_bd_ports dZmodDAC_Data_0] [get_bd_pins ZmodAWGController_0/dZmodDAC_Data]
  connect_bd_net -net ZmodAWGController_0_sZmodDAC_CS [get_bd_ports sZmodDAC_CS_0] [get_bd_pins ZmodAWGController_0/sZmodDAC_CS]
  connect_bd_net -net ZmodAWGController_0_sZmodDAC_EnOut [get_bd_ports sZmodDAC_EnOut_0] [get_bd_pins ZmodAWGController_0/sZmodDAC_EnOut]
  connect_bd_net -net ZmodAWGController_0_sZmodDAC_Reset [get_bd_ports sZmodDAC_Reset_0] [get_bd_pins ZmodAWGController_0/sZmodDAC_Reset]
  connect_bd_net -net ZmodAWGController_0_sZmodDAC_SCLK [get_bd_ports sZmodDAC_SCLK_0] [get_bd_pins ZmodAWGController_0/sZmodDAC_SCLK]
  connect_bd_net -net ZmodAWGController_0_sZmodDAC_SetFS1 [get_bd_ports sZmodDAC_SetFS1_0] [get_bd_pins ZmodAWGController_0/sZmodDAC_SetFS1]
  connect_bd_net -net ZmodAWGController_0_sZmodDAC_SetFS2 [get_bd_ports sZmodDAC_SetFS2_0] [get_bd_pins ZmodAWGController_0/sZmodDAC_SetFS2]
  connect_bd_net -net ZmodDcoClk_0_1 [get_bd_ports ZmodDcoClk_0] [get_bd_pins ZmodScopeController_0/ZmodDcoClk]
  connect_bd_net -net ZmodScopeController_0_ZmodAdcClkIn_n [get_bd_ports ZmodAdcClkIn_n_0] [get_bd_pins ZmodScopeController_0/ZmodAdcClkIn_n]
  connect_bd_net -net ZmodScopeController_0_ZmodAdcClkIn_p [get_bd_ports ZmodAdcClkIn_p_0] [get_bd_pins ZmodScopeController_0/ZmodAdcClkIn_p]
  connect_bd_net -net ZmodScopeController_0_iZmodSync [get_bd_ports iZmodSync_0] [get_bd_pins ZmodScopeController_0/iZmodSync]
  connect_bd_net -net ZmodScopeController_0_sZmodADC_CS [get_bd_ports sZmodADC_CS_0] [get_bd_pins ZmodScopeController_0/sZmodADC_CS]
  connect_bd_net -net ZmodScopeController_0_sZmodADC_Sclk [get_bd_ports sZmodADC_Sclk_0] [get_bd_pins ZmodScopeController_0/sZmodADC_Sclk]
  connect_bd_net -net ZmodScopeController_0_sZmodCh1CouplingH [get_bd_ports sZmodCh1CouplingH_0] [get_bd_pins ZmodScopeController_0/sZmodCh1CouplingH]
  connect_bd_net -net ZmodScopeController_0_sZmodCh1CouplingL [get_bd_ports sZmodCh1CouplingL_0] [get_bd_pins ZmodScopeController_0/sZmodCh1CouplingL]
  connect_bd_net -net ZmodScopeController_0_sZmodCh1GainH [get_bd_ports sZmodCh1GainH_0] [get_bd_pins ZmodScopeController_0/sZmodCh1GainH]
  connect_bd_net -net ZmodScopeController_0_sZmodCh1GainL [get_bd_ports sZmodCh1GainL_0] [get_bd_pins ZmodScopeController_0/sZmodCh1GainL]
  connect_bd_net -net ZmodScopeController_0_sZmodCh2CouplingH [get_bd_ports sZmodCh2CouplingH_0] [get_bd_pins ZmodScopeController_0/sZmodCh2CouplingH]
  connect_bd_net -net ZmodScopeController_0_sZmodCh2CouplingL [get_bd_ports sZmodCh2CouplingL_0] [get_bd_pins ZmodScopeController_0/sZmodCh2CouplingL]
  connect_bd_net -net ZmodScopeController_0_sZmodCh2GainH [get_bd_ports sZmodCh2GainH_0] [get_bd_pins ZmodScopeController_0/sZmodCh2GainH]
  connect_bd_net -net ZmodScopeController_0_sZmodCh2GainL [get_bd_ports sZmodCh2GainL_0] [get_bd_pins ZmodScopeController_0/sZmodCh2GainL]
  connect_bd_net -net ZmodScopeController_0_sZmodRelayComH [get_bd_ports sZmodRelayComH_0] [get_bd_pins ZmodScopeController_0/sZmodRelayComH]
  connect_bd_net -net ZmodScopeController_0_sZmodRelayComL [get_bd_ports sZmodRelayComL_0] [get_bd_pins ZmodScopeController_0/sZmodRelayComL]
  connect_bd_net -net axis_ram_writer_0_sts_data [get_bd_pins axis_ram_writer_0/sts_data] [get_bd_pins xlconcat_0/In2]
  connect_bd_net -net channel_config_0_combined_data [get_bd_pins ZmodAWGController_0/cDataAxisTdata] [get_bd_pins channel_config_0/combined_data]
  connect_bd_net -net channel_config_0_t_valid [get_bd_pins ZmodAWGController_0/cDataAxisTvalid] [get_bd_pins channel_config_0/t_valid]
  connect_bd_net -net clk_in1_0_1 [get_bd_ports clk_in1_0] [get_bd_pins clk_wiz_0/clk_in1]
  connect_bd_net -net clk_wiz_0_clk_out1 [get_bd_pins ZmodAWGController_0/DAC_InIO_Clk] [get_bd_pins ZmodAWGController_0/SysClk100] [get_bd_pins ZmodScopeController_0/ADC_SamplingClk] [get_bd_pins ZmodScopeController_0/SysClk100] [get_bd_pins axi_cfg_register_0/aclk] [get_bd_pins axi_interconnect_0/ACLK] [get_bd_pins axi_interconnect_0/M00_ACLK] [get_bd_pins axi_interconnect_0/M01_ACLK] [get_bd_pins axi_interconnect_0/S00_ACLK] [get_bd_pins axi_sts_register_0/aclk] [get_bd_pins axis_constant_0/aclk] [get_bd_pins axis_dwidth_converter_0/aclk] [get_bd_pins axis_ram_writer_0/aclk] [get_bd_pins axis_subset_converter_0/aclk] [get_bd_pins channel_config_0/clk] [get_bd_pins cic_compiler_0/aclk] [get_bd_pins clk_wiz_0/clk_out1] [get_bd_pins cpmg_0/clk] [get_bd_pins dds_compiler_0/aclk] [get_bd_pins dna_reader_0/aclk] [get_bd_pins fir_compiler_0/aclk] [get_bd_pins proc_sys_reset_0/slowest_sync_clk] [get_bd_pins processing_system7_0/M_AXI_GP0_ACLK] [get_bd_pins processing_system7_0/S_AXI_HP0_ACLK]
  connect_bd_net -net clk_wiz_0_clk_out2 [get_bd_pins ZmodAWGController_0/DAC_Clk] [get_bd_pins clk_wiz_0/clk_out2]
  connect_bd_net -net clk_wiz_0_clk_out3 [get_bd_pins ZmodScopeController_0/ADC_InClk] [get_bd_pins clk_wiz_0/clk_out3] [get_bd_pins sync_delay_0/clk]
  connect_bd_net -net clk_wiz_0_locked [get_bd_pins clk_wiz_0/locked] [get_bd_pins proc_sys_reset_0/dcm_locked]
  connect_bd_net -net cpmg_0_data [get_bd_pins channel_config_0/data_src_a] [get_bd_pins cpmg_0/data]
  connect_bd_net -net dZmodADC_Data_0_1 [get_bd_ports dZmodADC_Data_0] [get_bd_pins ZmodScopeController_0/dZmodADC_Data]
  connect_bd_net -net dds_compiler_0_m_axis_data_tdata [get_bd_pins channel_config_0/data_src_b] [get_bd_pins dds_compiler_0/m_axis_data_tdata]
  connect_bd_net -net dna_reader_0_dna_data [get_bd_pins dna_reader_0/dna_data] [get_bd_pins xlconcat_0/In1]
  connect_bd_net -net port_slicer_0_dout [get_bd_pins axis_dwidth_converter_0/aresetn] [get_bd_pins port_slicer_0/dout]
  connect_bd_net -net port_slicer_1_dout [get_bd_pins axis_ram_writer_0/aresetn] [get_bd_pins dna_reader_0/aresetn] [get_bd_pins port_slicer_1/dout]
  connect_bd_net -net port_slicer_2_dout [get_bd_pins cpmg_0/tau] [get_bd_pins port_slicer_2/dout]
  connect_bd_net -net port_slicer_3_dout [get_bd_pins cpmg_0/tau_l] [get_bd_pins port_slicer_3/dout]
  connect_bd_net -net port_slicer_5_dout [get_bd_pins port_slicer_5/dout] [get_bd_pins sync_delay_0/delay_reg]
  connect_bd_net -net port_slicer_6_dout [get_bd_pins axis_constant_0/cfg_data] [get_bd_pins port_slicer_6/dout]
  connect_bd_net -net proc_sys_reset_0_peripheral_aresetn [get_bd_pins axi_cfg_register_0/aresetn] [get_bd_pins axi_interconnect_0/ARESETN] [get_bd_pins axi_interconnect_0/M00_ARESETN] [get_bd_pins axi_interconnect_0/M01_ARESETN] [get_bd_pins axi_interconnect_0/S00_ARESETN] [get_bd_pins axi_sts_register_0/aresetn] [get_bd_pins axis_subset_converter_0/aresetn] [get_bd_pins cic_compiler_0/aresetn] [get_bd_pins fir_compiler_0/aresetn] [get_bd_pins proc_sys_reset_0/peripheral_aresetn]
  connect_bd_net -net sync_delay_0_sync_pulse [get_bd_pins cpmg_0/sync_pulse] [get_bd_pins sync_delay_0/sync_pulse]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins axi_sts_register_0/sts_data] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins proc_sys_reset_0/ext_reset_in] [get_bd_pins xlconstant_0/dout]
  connect_bd_net -net xlconstant_1_dout [get_bd_pins axis_ram_writer_0/cfg_data] [get_bd_pins xlconstant_1/dout]
  connect_bd_net -net xlconstant_3_dout [get_bd_pins ZmodAWGController_0/sTestMode] [get_bd_pins ZmodScopeController_0/sTestMode] [get_bd_pins xlconstant_3/dout]

  # Create address segments
  assign_bd_address -offset 0x00000000 -range 0x20000000 -target_address_space [get_bd_addr_spaces axis_ram_writer_0/m_axi] [get_bd_addr_segs processing_system7_0/S_AXI_HP0/HP0_DDR_LOWOCM] -force
  assign_bd_address -offset 0x40000000 -range 0x00001000 -target_address_space [get_bd_addr_spaces processing_system7_0/Data] [get_bd_addr_segs axi_cfg_register_0/s_axi/reg0] -force
  assign_bd_address -offset 0x40001000 -range 0x00001000 -target_address_space [get_bd_addr_spaces processing_system7_0/Data] [get_bd_addr_segs axi_sts_register_0/s_axi/reg0] -force

  # Perform GUI Layout
  regenerate_bd_layout -layout_string {
   "ActiveEmotionalView":"Default View",
   "Default View_ScaleFactor":"0.721846",
   "Default View_TopLeft":"2264,327",
   "ExpandedHierarchyInLayout":"",
   "guistr":"# # String gsaved with Nlview 7.0r4  2019-12-20 bk=1.5203 VDI=41 GEI=36 GUI=JA:10.0 TLS
#  -string -flagsOSRD
preplace port DDR_0 -pg 1 -lvl 16 -x 5270 -y 600 -defaultsOSRD
preplace port FIXED_IO_0 -pg 1 -lvl 16 -x 5270 -y 620 -defaultsOSRD
preplace port port-id_sZmodCh2GainL_0 -pg 1 -lvl 16 -x 5270 -y 440 -defaultsOSRD
preplace port port-id_sZmodCh2GainH_0 -pg 1 -lvl 16 -x 5270 -y 420 -defaultsOSRD
preplace port port-id_iZmodSync_0 -pg 1 -lvl 16 -x 5270 -y 220 -defaultsOSRD
preplace port port-id_sZmodCh1GainL_0 -pg 1 -lvl 16 -x 5270 -y 400 -defaultsOSRD
preplace port port-id_ZmodAdcClkIn_n_0 -pg 1 -lvl 16 -x 5270 -y 200 -defaultsOSRD
preplace port port-id_sZmodCh1CouplingH_0 -pg 1 -lvl 16 -x 5270 -y 300 -defaultsOSRD
preplace port port-id_sZmodADC_Sclk_0 -pg 1 -lvl 16 -x 5270 -y 280 -defaultsOSRD
preplace port port-id_sZmodADC_CS_0 -pg 1 -lvl 16 -x 5270 -y 260 -defaultsOSRD
preplace port port-id_sZmodADC_SDIO_0 -pg 1 -lvl 16 -x 5270 -y 240 -defaultsOSRD
preplace port port-id_sZmodCh1GainH_0 -pg 1 -lvl 16 -x 5270 -y 380 -defaultsOSRD
preplace port port-id_ZmodAdcClkIn_p_0 -pg 1 -lvl 16 -x 5270 -y 180 -defaultsOSRD
preplace port port-id_sZmodCh2CouplingL_0 -pg 1 -lvl 16 -x 5270 -y 360 -defaultsOSRD
preplace port port-id_sZmodCh2CouplingH_0 -pg 1 -lvl 16 -x 5270 -y 340 -defaultsOSRD
preplace port port-id_sZmodCh1CouplingL_0 -pg 1 -lvl 16 -x 5270 -y 320 -defaultsOSRD
preplace port port-id_sZmodRelayComH_0 -pg 1 -lvl 16 -x 5270 -y 460 -defaultsOSRD
preplace port port-id_sZmodRelayComL_0 -pg 1 -lvl 16 -x 5270 -y 480 -defaultsOSRD
preplace port port-id_sZmodDAC_SetFS1_0 -pg 1 -lvl 16 -x 5270 -y 1130 -defaultsOSRD
preplace port port-id_ZmodDAC_ClkIO_0 -pg 1 -lvl 16 -x 5270 -y 1070 -defaultsOSRD
preplace port port-id_ZmodDAC_ClkIn_0 -pg 1 -lvl 16 -x 5270 -y 1090 -defaultsOSRD
preplace port port-id_sZmodDAC_SDIO_0 -pg 1 -lvl 16 -x 5270 -y 1030 -defaultsOSRD
preplace port port-id_sZmodDAC_Reset_0 -pg 1 -lvl 16 -x 5270 -y 1050 -defaultsOSRD
preplace port port-id_sZmodDAC_CS_0 -pg 1 -lvl 16 -x 5270 -y 990 -defaultsOSRD
preplace port port-id_sZmodDAC_SCLK_0 -pg 1 -lvl 16 -x 5270 -y 1010 -defaultsOSRD
preplace port port-id_sZmodDAC_SetFS2_0 -pg 1 -lvl 16 -x 5270 -y 1150 -defaultsOSRD
preplace port port-id_sZmodDAC_EnOut_0 -pg 1 -lvl 16 -x 5270 -y 1170 -defaultsOSRD
preplace port port-id_ZmodDcoClk_0 -pg 1 -lvl 0 -x -50 -y 320 -defaultsOSRD
preplace port port-id_clk_in1_0 -pg 1 -lvl 0 -x -50 -y 740 -defaultsOSRD
preplace portBus dZmodDAC_Data_0 -pg 1 -lvl 16 -x 5270 -y 1110 -defaultsOSRD
preplace portBus dZmodADC_Data_0 -pg 1 -lvl 0 -x -50 -y 340 -defaultsOSRD
preplace inst processing_system7_0 -pg 1 -lvl 8 -x 2510 -y 640 -defaultsOSRD
preplace inst ZmodAWGController_0 -pg 1 -lvl 15 -x 5050 -y 1060 -defaultsOSRD
preplace inst ZmodScopeController_0 -pg 1 -lvl 8 -x 2510 -y 270 -defaultsOSRD
preplace inst clk_wiz_0 -pg 1 -lvl 1 -x 70 -y 740 -defaultsOSRD
preplace inst proc_sys_reset_0 -pg 1 -lvl 2 -x 370 -y 670 -defaultsOSRD
preplace inst xlconstant_0 -pg 1 -lvl 1 -x 70 -y 870 -defaultsOSRD
preplace inst axis_subset_converter_0 -pg 1 -lvl 3 -x 730 -y 620 -defaultsOSRD
preplace inst cic_compiler_0 -pg 1 -lvl 4 -x 1050 -y 640 -defaultsOSRD
preplace inst fir_compiler_0 -pg 1 -lvl 5 -x 1360 -y 660 -defaultsOSRD
preplace inst port_slicer_0 -pg 1 -lvl 5 -x 1360 -y 810 -defaultsOSRD
preplace inst axis_dwidth_converter_0 -pg 1 -lvl 6 -x 1700 -y 690 -defaultsOSRD
preplace inst axis_ram_writer_0 -pg 1 -lvl 7 -x 2050 -y 740 -defaultsOSRD
preplace inst xlconstant_1 -pg 1 -lvl 6 -x 1700 -y 940 -defaultsOSRD
preplace inst port_slicer_1 -pg 1 -lvl 6 -x 1700 -y 840 -defaultsOSRD
preplace inst dna_reader_0 -pg 1 -lvl 8 -x 2510 -y 960 -defaultsOSRD
preplace inst xlconcat_0 -pg 1 -lvl 9 -x 2940 -y 1010 -defaultsOSRD
preplace inst axi_interconnect_0 -pg 1 -lvl 9 -x 2940 -y 780 -defaultsOSRD
preplace inst axi_cfg_register_0 -pg 1 -lvl 10 -x 3270 -y 970 -defaultsOSRD
preplace inst axi_sts_register_0 -pg 1 -lvl 10 -x 3270 -y 800 -defaultsOSRD
preplace inst xlconstant_2 -pg 1 -lvl 7 -x 2050 -y 160 -defaultsOSRD
preplace inst xlconstant_3 -pg 1 -lvl 7 -x 2050 -y 260 -defaultsOSRD
preplace inst channel_config_0 -pg 1 -lvl 14 -x 4650 -y 1010 -defaultsOSRD
preplace inst dds_compiler_0 -pg 1 -lvl 13 -x 4250 -y 1010 -defaultsOSRD
preplace inst cpmg_0 -pg 1 -lvl 13 -x 4250 -y 1220 -defaultsOSRD
preplace inst port_slicer_2 -pg 1 -lvl 12 -x 3860 -y 1180 -defaultsOSRD
preplace inst port_slicer_3 -pg 1 -lvl 12 -x 3860 -y 1280 -defaultsOSRD
preplace inst sync_delay_0 -pg 1 -lvl 12 -x 3860 -y 780 -defaultsOSRD
preplace inst port_slicer_4 -pg 1 -lvl 11 -x 3550 -y 920 -defaultsOSRD
preplace inst port_slicer_5 -pg 1 -lvl 11 -x 3550 -y 800 -defaultsOSRD
preplace inst axis_constant_0 -pg 1 -lvl 12 -x 3860 -y 1000 -defaultsOSRD
preplace inst port_slicer_6 -pg 1 -lvl 11 -x 3550 -y 1040 -defaultsOSRD
preplace netloc clk_wiz_0_clk_out1 1 1 14 170 570 560 530 890 550 1210 740 1530 770 1840 830 2260 870 2780J 920 3120J 890 3420J 860 3680 930 4060 930 4440 930 4830
preplace netloc clk_wiz_0_locked 1 1 1 190 710n
preplace netloc xlconstant_0_dout 1 1 1 180 650n
preplace netloc proc_sys_reset_0_peripheral_aresetn 1 2 8 550 520 900 560 1200 580 NJ 580 NJ 580 2240J 740 2770 930 3130
preplace netloc port_slicer_0_dout 1 5 1 1520J 710n
preplace netloc xlconstant_1_dout 1 6 1 1850J 770n
preplace netloc Net 1 4 8 1210 750 1510 780 1830J 890 NJ 890 2730J 1100 NJ 1100 3410 1100 3680
preplace netloc port_slicer_1_dout 1 6 2 1860 880 2200
preplace netloc dna_reader_0_dna_data 1 8 1 2750 960n
preplace netloc xlconcat_0_dout 1 9 1 3110 830n
preplace netloc Net1 1 7 8 2250 880 2740 1120 NJ 1120 NJ 1120 NJ 1120 NJ 1120 NJ 1120 4840
preplace netloc xlconstant_3_dout 1 7 8 2210 1110 NJ 1110 NJ 1110 NJ 1110 NJ 1110 NJ 1110 NJ 1110 4850J
preplace netloc axis_ram_writer_0_sts_data 1 7 2 2220 860 2760J
preplace netloc ZmodScopeController_0_sZmodCh2GainL 1 8 8 NJ 440 NJ 440 NJ 440 NJ 440 NJ 440 NJ 440 NJ 440 NJ
preplace netloc ZmodScopeController_0_sZmodCh2GainH 1 8 8 NJ 420 NJ 420 NJ 420 NJ 420 NJ 420 NJ 420 NJ 420 NJ
preplace netloc ZmodScopeController_0_iZmodSync 1 8 8 NJ 220 NJ 220 NJ 220 NJ 220 NJ 220 NJ 220 NJ 220 NJ
preplace netloc ZmodScopeController_0_sZmodCh1GainL 1 8 8 NJ 400 NJ 400 NJ 400 NJ 400 NJ 400 NJ 400 NJ 400 NJ
preplace netloc ZmodScopeController_0_ZmodAdcClkIn_n 1 8 8 NJ 200 NJ 200 NJ 200 NJ 200 NJ 200 NJ 200 NJ 200 NJ
preplace netloc ZmodScopeController_0_sZmodCh1CouplingH 1 8 8 NJ 300 NJ 300 NJ 300 NJ 300 NJ 300 NJ 300 NJ 300 NJ
preplace netloc ZmodScopeController_0_sZmodADC_Sclk 1 8 8 NJ 280 NJ 280 NJ 280 NJ 280 NJ 280 NJ 280 NJ 280 NJ
preplace netloc ZmodScopeController_0_sZmodADC_CS 1 8 8 NJ 260 NJ 260 NJ 260 NJ 260 NJ 260 NJ 260 NJ 260 NJ
preplace netloc Net2 1 8 8 NJ 240 NJ 240 NJ 240 NJ 240 NJ 240 NJ 240 NJ 240 NJ
preplace netloc ZmodScopeController_0_sZmodCh1GainH 1 8 8 NJ 380 NJ 380 NJ 380 NJ 380 NJ 380 NJ 380 NJ 380 NJ
preplace netloc ZmodScopeController_0_ZmodAdcClkIn_p 1 8 8 NJ 180 NJ 180 NJ 180 NJ 180 NJ 180 NJ 180 NJ 180 NJ
preplace netloc ZmodScopeController_0_sZmodCh2CouplingL 1 8 8 NJ 360 NJ 360 NJ 360 NJ 360 NJ 360 NJ 360 NJ 360 NJ
preplace netloc ZmodScopeController_0_sZmodCh2CouplingH 1 8 8 NJ 340 NJ 340 NJ 340 NJ 340 NJ 340 NJ 340 NJ 340 NJ
preplace netloc ZmodScopeController_0_sZmodCh1CouplingL 1 8 8 NJ 320 NJ 320 NJ 320 NJ 320 NJ 320 NJ 320 NJ 320 NJ
preplace netloc ZmodScopeController_0_sZmodRelayComH 1 8 8 NJ 460 NJ 460 NJ 460 NJ 460 NJ 460 NJ 460 NJ 460 NJ
preplace netloc ZmodScopeController_0_sZmodRelayComL 1 8 8 NJ 480 NJ 480 NJ 480 NJ 480 NJ 480 NJ 480 NJ 480 NJ
preplace netloc ZmodAWGController_0_sZmodDAC_SetFS1 1 15 1 NJ 1130
preplace netloc ZmodAWGController_0_ZmodDAC_ClkIO 1 15 1 NJ 1070
preplace netloc ZmodAWGController_0_ZmodDAC_ClkIn 1 15 1 NJ 1090
preplace netloc ZmodAWGController_0_dZmodDAC_Data 1 15 1 NJ 1110
preplace netloc Net3 1 15 1 NJ 1030
preplace netloc ZmodAWGController_0_sZmodDAC_Reset 1 15 1 NJ 1050
preplace netloc ZmodAWGController_0_sZmodDAC_CS 1 15 1 NJ 990
preplace netloc ZmodAWGController_0_sZmodDAC_SCLK 1 15 1 NJ 1010
preplace netloc ZmodAWGController_0_sZmodDAC_SetFS2 1 15 1 NJ 1150
preplace netloc ZmodAWGController_0_sZmodDAC_EnOut 1 15 1 NJ 1170
preplace netloc channel_config_0_combined_data 1 14 1 N 1000
preplace netloc channel_config_0_t_valid 1 14 1 N 1020
preplace netloc clk_wiz_0_clk_out2 1 1 14 170J 1130 NJ 1130 NJ 1130 NJ 1130 NJ 1130 NJ 1130 NJ 1130 NJ 1130 NJ 1130 NJ 1130 3690J 1100 NJ 1100 NJ 1100 4830
preplace netloc clk_wiz_0_clk_out3 1 1 11 NJ 770 NJ 770 NJ 770 1200J 1000 NJ 1000 NJ 1000 2230 1090 NJ 1090 3090J 710 NJ 710 3690J
preplace netloc ZmodDcoClk_0_1 1 0 8 NJ 320 NJ 320 NJ 320 NJ 320 NJ 320 NJ 320 NJ 320 NJ
preplace netloc dZmodADC_Data_0_1 1 0 8 NJ 340 NJ 340 NJ 340 NJ 340 NJ 340 NJ 340 NJ 340 NJ
preplace netloc dds_compiler_0_m_axis_data_tdata 1 13 1 4440 1010n
preplace netloc Net4 1 11 2 3690 920 4050
preplace netloc cpmg_0_data 1 13 1 4450 1010n
preplace netloc port_slicer_2_dout 1 12 1 4030J 1180n
preplace netloc port_slicer_3_dout 1 12 1 4060J 1240n
preplace netloc sync_delay_0_sync_pulse 1 12 1 4040 780n
preplace netloc port_slicer_5_dout 1 11 1 NJ 800
preplace netloc port_slicer_6_dout 1 11 1 3680J 1010n
preplace netloc clk_in1_0_1 1 0 1 NJ 740
preplace netloc cic_compiler_0_M_AXIS_DATA 1 4 1 N 640
preplace netloc fir_compiler_0_M_AXIS_DATA 1 5 1 1530 660n
preplace netloc axis_dwidth_converter_0_M_AXIS 1 6 1 1840 690n
preplace netloc axis_ram_writer_0_m_axi 1 7 1 2220 630n
preplace netloc S00_AXI_1 1 8 1 2780 640n
preplace netloc axi_interconnect_0_M01_AXI 1 9 1 3100 790n
preplace netloc axi_interconnect_0_M00_AXI 1 9 1 N 770
preplace netloc processing_system7_0_DDR 1 8 8 NJ 600 NJ 600 NJ 600 NJ 600 NJ 600 NJ 600 NJ 600 NJ
preplace netloc processing_system7_0_FIXED_IO 1 8 8 NJ 620 NJ 620 NJ 620 NJ 620 NJ 620 NJ 620 NJ 620 NJ
preplace netloc ZmodScopeController_0_DataStream 1 2 7 570 540 NJ 540 NJ 540 NJ 540 NJ 540 NJ 540 2780
preplace netloc axis_subset_converter_0_M_AXIS 1 3 1 N 620
preplace netloc axis_constant_0_m_axis 1 12 1 N 990
levelinfo -pg 1 -50 70 370 730 1050 1360 1700 2050 2510 2940 3270 3550 3860 4250 4650 5050 5270
pagesize -pg 1 -db -bbox -sgen -290 0 5510 1340
"
}

  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_design_1()
cr_bd_design_1 ""
set_property REGISTERED_WITH_MANAGER "1" [get_files design_1.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files design_1.bd ] 

#call make_wrapper to create wrapper files
if { [get_property IS_LOCKED [ get_files -norecurse design_1.bd] ] == 1  } {
  import_files -fileset sources_1 [file normalize "${origin_dir}/../cnmr_hw_ez7.gen/sources_1/bd/design_1/hdl/design_1_wrapper.v" ]
} else {
  set wrapper_path [make_wrapper -fileset sources_1 -files [ get_files -norecurse design_1.bd] -top]
  add_files -norecurse -fileset sources_1 $wrapper_path
}


set idrFlowPropertiesConstraints ""
catch {
 set idrFlowPropertiesConstraints [get_param runs.disableIDRFlowPropertyConstraints]
 set_param runs.disableIDRFlowPropertyConstraints 1
}

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xc7z020clg484-1 -flow {Vivado Synthesis 2022} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2022" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "auto_incremental_checkpoint" -value "1" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xc7z020clg484-1 -flow {Vivado Implementation 2022} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2022" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]
catch {
 if { $idrFlowPropertiesConstraints != {} } {
   set_param runs.disableIDRFlowPropertyConstraints $idrFlowPropertiesConstraints
 }
}

puts "INFO: Project created:${_xil_proj_name_}"
# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets [ list "drc_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets [ list "methodology_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets [ list "power_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets [ list "timing_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_2" ] ]
set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
